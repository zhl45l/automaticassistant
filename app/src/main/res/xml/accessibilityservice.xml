<?xml version="1.0" encoding="utf-8"?>
<accessibility-service
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:accessibilityEventTypes="typeAllMask"
    android:packageNames="com.ss.android.ugc.aweme,com.tencent.mm"
    android:accessibilityFeedbackType="feedbackAllMask"
    android:notificationTimeout="100"
    android:accessibilityFlags="flagInputMethodEditor|flagIncludeNotImportantViews|flagReportViewIds|flagRetrieveInteractiveWindows|flagRequestEnhancedWebAccessibility"
    android:canRetrieveWindowContent="true"
    android:canPerformGestures="true"
    android:canRequestTouchExplorationMode="true"
/>

    <!--    accessibilityEventTypes：设置响应事件的类型,可以监听单击、长按、滑动等,用|隔开;监听所有事件可以用typeAllMask-->
    <!--    accessibilityFeedbackType：服务提供的反馈类型,feedbackGeneric通用反馈-->
    <!--    accessibilityFlags：辅助功能附加的标志,flagDefault默认的配置-->
    <!--    canRetrieveWindowContent：辅助功能服务是否能够取回活动窗口内容的属性-->
    <!--    notificationTimeout：响应时间-->
    <!--    packageNames：监听的应用包名,不填,默认监听所有应用的事件-->

<!--    accessibilityEventTypes：响应的事件类型（单击、长按、滑动、通知等），这里当然是全部事件啦
typeViewClicked	点击事件
typeViewSelected	view被选择
typeViewScrolled	滑动事件
typeWindowContentChanged	窗口内容该表
typeAllMask	所有事件
-->
<!--    accessibilityFeedbackType：回显给用户的方式（例如：配置TTS引擎，实现发音），辅助嘛...-->
<!--    accessibilityFlags：很关键，你的应用程序需要获取哪些信息：1.flagDefault默认;
2.flagIncludeNotImportantViews显示所有视图节点（主要是效率，才会有这个属性，如下图FL套LL套TV，如果LL均没有任何可交互的属性（如没点击事件），则这个LL会被当做不重要的视图来处理，没有flagIncludeNotImportantViews属性时FL.getChild时只会得到TV）；3.flagReportViewIds允许得到View的ID（对应AccessibilityNodeInfo.getViewIdResourceName()方法，如果不写此属性只会得到空）; 其他标志flagRequestTouchExplorationMode、flagRequestEnhancedWebAccessibility、flagRequestFilterKeyEvents、flagRetrieveInteractiveWindows的具体介绍见AccessibilityServiceInfo类中以FLAG_开头的静态常量-->
